TODO for Cline.


Goal: make production usable


- [ ] Add history table including who did what
    - [ ] Special users for "system". Must point to some usage. Then handled in display.
    - [x] History table for emails
        Example actions
        - [x] Email received
        - [x] Email classified by user (include status type, status text, answer)
        - [x] Email classified by prompt (auto classification)
        - [x] Email sent
        - [X] Email ignored
- [ ] Old threads
    - [x] Remove extra labels
    - [ ] Open some labels to public
    - [ ] Clean up old threads by archiving them
- [ ] Update-imap - remake
    - [x] Direct access should list folders
    - [x] Read per folder
    - [x] Database table with status for imap folders
        - Fields
            - Folder name
            - Thread id
            - Last checked successfully for emails
        - [x] Create rows in update-imap.php
        - [x] Update last checked when successfully reading emails (process-folder in update-imap.php)
    - [x] Make sure update-imap logic works
    - [x] Create folder status in production
    - [x] Run a couple of folders and check that it works
    - [x] Schedule reading of folders
        - [x] Processing of folder in update-imap - Logging of outputs in own table
            - Table name: imap_folder_log
            - Fields
                - Folder name
                - Status
                - Message
                - Created at
        - [x] Run on schedule, last attempted first
    - [ ] Scheduled run of new folders
    - [ ] Scheduled run of inbox
    - [ ] Scheduled run of sent
- [x] Update-imap - Run on schedule
- [ ] Extract data from emails
    - [ ] Extract plain text body from EML
        - [ ] Make a scheduled task for extraction of information
        - [ ] Make framework for what extractions to do - SQL based
        - [ ] Extraction - use the code from file.php
    - [ ] Extract HTML body from EML
    - [ ] Extract PDF attachments as text
    - [ ] Extract image attachements as text (OpenAI)
- [ ] Automatic handling
    - Must have up-to-date ImapFolderStatus (DB table) to be allowed to run
    - Purring - Next email expected date (based on plan or that we have received an expected date from public entity)

- [ ] Views available for public
    - [ ] Public threads visible to non authenticated users
    - [ ] Front page with information

- [ ] Email extractor
    - To be used as foundation for automatic classification and follow up
    - [x] New datatype ThreadEmailExtraction
        - extraction_id
        - email_id
        - attachment_id (nullable)
        - prompt_id
        - prompt_text
        - prompt_service
        - extracted_text
        - error_message
        - created_at
        - updated_at
    - [x] Service class for creating and updating ThreadEmailExtraction
    - [x] Overview page for admin to see all unclassified emails and attachments
    - [ ] Manually trigger extration prompts from overview page
    - [ ] Integration with OpenAI for extraction using prompts
        - One prompt can depend on another.
        - Some prompts depend on the type of request

- [ ] Update-imap - folder creation should be done in class so that logic is the same in tests and update-imap.php
- [ ] GUI for replying to threads
    - [ ] Reply form with rich text editor
    - [ ] Template system for common responses
    - [ ] Attachment upload functionality
- [ ] New thread concepts
    - Reply to thread
    - Enable notiication for replies
    - Automatic follow up

- [ ] Database - run backup on schedule

TODO - medium term:
- [ ] Automatic follow up
    - [ ] Scheduled email sending system
    - [ ] Response tracking
    - [ ] Automated reminder system
    - [ ] Configurable follow-up rules
